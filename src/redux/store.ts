import { combineReducers } from 'redux'
import { configureStore } from '@reduxjs/toolkit'
import { factApi } from './services/factApi'
import { persistReducer, persistStore } from 'redux-persist'
import factReducer from './slices/factSlice'
import storage from 'redux-persist/lib/storage'

const persistConfig = {
  key: 'root',
  storage // The storage object to be used for persisting the state
}

// Combine the reducers generated by the factApi with the factReducer
const rootReducer = combineReducers({
  fact: factReducer,
  [factApi.reducerPath]: factApi.reducer
})

const persistedReducer = persistReducer(persistConfig, rootReducer) // Creating a persisted reducer by wrapping the rootReducer with persistReducer

export const store = configureStore({
  reducer: persistedReducer, // Assigning the persistedReducer as the root reducer for the store
  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(factApi.middleware) // Adding the factApi middleware to the store's middleware stack
})

export const persistor = persistStore(store) // Creating a persistor object for persisting the store

export type RootState = ReturnType<typeof store.getState>
export type AppDispatch = typeof store.dispatch
